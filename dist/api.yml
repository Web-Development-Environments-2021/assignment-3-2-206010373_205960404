openapi: 3.0.0
info:
  title: api
  description: API for project
  version: 1.0.0
tags:
  - name: Users
  - name: Auth
  - name: League
  - name: Players
  - name: Teams
  - name: Matches
  - name: Admin
paths:
  /Register:
    post:
      tags:
        - Auth
      summary: Add new user
      description: A new user from the client is added to the server
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: A new user has been added
        "400":
          description: wrong input parameters
  /Login:
    post:
      tags:
        - Auth
      summary: Login an exist user
      description: An exist user login to the system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginScheme"
      responses:
        "200":
          description: >
            User was found in the DB and authenitcated successfully.
            The session ID is returned in a cookie named `session`. 
            You should include this cookie in subsequent requests
          # headers:
          #   Set-Cookie:
          #     schema:
          #       type: string
          #       example: session=87s97sdhgf279293f8w0e9
            # Note that the Set-Cookie header and securitySchemes are not connected in any way, and the Set-Header definition is for documentation purposes only.
        "401":
          description: Authentication failed
  /logout:
    post:
      tags:
        - Auth
      summary: logout a user from the system and delete his cookie
      responses:
        "200":
          description: "the user has ben successfully logged out"
  /league/getDetails:
    get:
      tags:
        - league
      summary: Return the details about the current league
      responses:
        "200":
          description: data about the current league returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/League"
        "400":
          description: wrong input parameters
  /users/favoritePlayers:
    get:
      tags:
        - Users
        - Players
      summary: Return the favorite players that were saved by user
      parameters:
      responses:
        "200":
          description: data about the user's favorites players returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PlayerPreview"
        "401":
          description: user is not authorized
    post:
      summary: save player in the favorites list of a user
      tags:
        - Users
        - Players
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                player_id:
                  type: string
                  description: player's id which the user saved
                  example: 85
      responses:
        "201":
          description: The player successfully saved as favorite
        "401":
          description: user is not authorized
    delete:
      tags:
        - Users
        - Players
      summary: delete player from user favorite array
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                player_id:
                  type: string
                  description: player's id which the user saved
                  example: 85
      responses:
        "200":
          description: player deleted from list Succsessfully
        "404":
          description: Player not found

  /users/favoriteTeams:
    get:
      tags:
        - Users
        - Teams
      summary: Return the favorite teams that were saved by user
      parameters:
      responses:
        "200":
          description: data about the user's favorites Teams returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TeamPreview"
        "401":
          description: user is not authorized
    post:
      summary: save team in the favorites list of a user
      tags:
        - Users
        - Teams
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                team_id:
                  type: string
                  description: team's id which the user saved
                  example: 85
      responses:
        "201":
          description: The team successfully saved as favorite
        "401":
          description: user is not authorized
    delete:
      tags:
        - Users
        - Teams
      summary: delete team from user favorite array
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                team_id:
                  type: string
                  description: team's id which the user saved
                  example: 85
      responses:
        "205":
          description: team deleted from list Succsessfully
        "404":
          description: team not found
  /users/favoriteMatches:
    get:
      tags:
        - Users
        - Matches
      summary: Return the favorite Matches that were saved by user
      parameters:
      responses:
        "200":
          description: data about the user's favorites Matches returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MatchPreview"
        "401":
          description: user is not authorized
    post:
      summary: save match in the favorites list of a user
      tags:
        - Users
        - Matches
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                match_id:
                  type: string
                  description: match's id which the user saved
                  example: 85
      responses:
        "201":
          description: The match successfully saved as favorite
        "401":
          description: user is not authorized
    delete:
      tags:
        - Users
        - Matches
      summary: delete match from user favorite array
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                match_id:
                  type: string
                  description: match's id which the user saved
                  example: 85
      responses:
        "205":
          description: match deleted from list Succsessfully
        "404":
          description: match not found
  /teams/teamFullDetails/{teamId}:
    get:
      summary: get full deatils about a team
      description: useful for team page
      tags:
        - Teams
      parameters:
        - in: path
          name: teamId
          description: team's id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: data about the team
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team"
        "404":
          description: teamId is not exists

  /admin/addPreviewMatch:
    post:
      tags:
      - Admin
      summary: Add New match to system
      description: The admin add's details about a new future game
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreviewMatch'
        description:
      responses:
        "201":
          description: Add New match to system Successfuly
        "400":
          description: fail to add match to system

  /admin/addMatch:
    post:
      tags:
      - Admin
      summary: Add New match to the system
      description: The admin add's details about a new future game
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Match'
        description:
      responses:
        "201":
          description:  a New match is added to the system Successfuly
        "400":
          description: failed to add a match to the system

  /admin/addScoretoMatch:
    put:
      tags:
      - Admin
      summary: Add a Score to a match.
      description: The admin add's a score to a match
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                MatchId:
                  type: int
                  description: an id for a game the admin already added
                  example: 14
                HomeGoals:
                  type: string
                  description: amount of goals for thr hometeam
                  example: 1
                AwayGoals:
                  type: string
                  description: amount of goals for thr awayteam
                  example: 1
      responses:
        '200':
          description: A new score has been added to game
        '400':
          description: Wrong input parameters

  /admin/addEventtoMatch:
    post:
      tags:
      - Admin
      summary: Add New event to a match.
      description: The admin add's events to a match
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventDetails'
        description: add a new event
      responses:
        '200':
          description: A new event has been added.
        '400':
          description: failed to add an event.
          
  /players/preview/{player_id}:
    get:
      tags:
      - Player
      summary: get a preview about a player by his ID
      parameters:
      - name: player_id
        in: path
        description: The ID of the player
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 12345
      responses:
        "200":
          description: Data of the specific player
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerPreview'
        "404":
          description: Can't find player ID
  /players/Details/{player_id}:
    get:
      tags:
      - Player
      summary: get all Details about a player by his ID
      parameters:
      - name: player_id
        in: path
        description: The ID of the player
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 12345
      responses:
        "200":
          description: Full Data of the specific player
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailsPlayer'
        "404":
          description: Can't find player ID

components:
  schemas:
    User:
      type: object
      properties:
        username:
          maxLength: 8
          minLength: 3
          type: string
          description: username conatins between 3 to 8 letters only
          example: ladygaga
        firstname:
          type: string
          description: user's first name
          example: Stefani
        lastname:
          type: string
          description: user's last name
          example: Germanotta
        country:
          type: string
          description: user's country
          example: USA
        password:
          maxLength: 10
          minLength: 5
          type: string
          description:
            password conatins between 5 to 10 chars, at least one of them
            is a number and a special char
          format: password
          example: lady@56
        email:
          pattern: email
          type: string
          description: user's email
          example: ladygaga@gmail.com
        imageurl:
          pattern: URL
          type: string
          description: URL for the user's image
          example: https://cloudinary.com/
      description: Model containing user info
    LoginScheme:
      type: object
      properties:
        username:
          type: string
          minLength: 3
          maxLength: 8
          description: username conatins letters only
          example: naorbe
        password:
          type: string
          minLength: 5
          maxLength: 10
          format: password
          description: password conatins at least one number and one special char
          example: naor@55
    League:
      type: object
      properties:
        league_name:
          type: string
          description: league name
          example: Superliga
        current_season_name:
          type: string
          description: current season name
          example: "2020/2021"
        current_stage_name:
          type: string
          description: current stage name
          example: Championship Round
    PlayerPreview:
      type: object
      properties:
        player_id:
          type: integer
          example: 1
        name:
          type: string
          description: player's name
          example: Sten Michael Grytebust
        image:
          type: string
          description: player's image
          format: URL
          example: https://cdn.sportmonks.com/images/soccer/players/11/84587.png
        position:
          type: integer
          description: player's position in team
          example: 1
        team_name:
          type: string
          description: player's team name
          example: København
    DetailsPlayer:
      type: object
      properties:
        playerPreview:
          $ref: '#/components/schemas/PlayerPreview'
        common_name:
          type: string
          example: messi
        nationality:
          type: string
          example: israel
        birthdate:
          type: string
          format: Date
          example: 14/10/95
        birthcountry:
          type: string
          example: israel
        height:
          type: integer
          example: 80
        weight:
          type: integer
      description: additional data that is not displayed in the PlayerPreview.

    Team:
      type: object
      properties:
        name:
          type: string
          description: team name
          example: København
        players:
          type: array
          items:
            type: object
            $ref: "#/components/schemas/PlayerPreview"

  #from here ours
    EventInGame:
      type: string
      enum:
      - Goal
      - Offside
      - Foul
      - RedCard
      - YellowCard
      - Injury
      - SubPlayer
    EventDetails:
      type: object
      properties:
        MatchId:
          type: integer
          example: 80
        Date:
          type: string
          format: Date
          example: 2017-07-21T00:00:00.000+0000
        Hour:
          type: string
          example: 15:30
        TimeMinuteInGame:
          maximum: 90
          minimum: 0
          type: integer
          example: 60
        EventInGame:
          type: string
          $ref: '#/components/schemas/EventInGame'
          description: You need to choose one of the following options - Goal, Offside, Foul,RedCard,YellowCard,Injury,SubPlayer
        player_id:
          type: integer
          example: Neymar
        Description:
          type: string
          example: 15.05.2021 21:30 60, Red card to Liad Segev
    PreviewMatch:
      type: object
      properties:
        date:
          type: string
          #format: date
        hour:
          type: string
          example: "15:30"
        stadium:
          type: string
          example: Camp nou
        superligaName:
          type: string
          example: Ligat Haal
        seasonName:
          type: string
          example: 2020/2021
        stageName:
          type: string
          example: Final
        refereeName:
        type: string
        example: Dvir Rainisch
        homeTeamID:
          type: integer
          example: 12345
        awayTeamID:
          type: integer
          example: 12345
    Match:
      type: object
      properties:
        previewMatch:
          $ref: '#/components/schemas/PreviewMatch'
        homeGoals:
          type: integer
          example: 3
        awayGoals:
          type: integer
          example: 2
        eventsCalendar:
          type: array
          items:
            $ref: '#/components/schemas/EventDetails'

